!function(){"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){var n,r,o=this,i=e.cardData,a=e.userId,u=e.template,s=e.handleCardClick,c=e.handleTrashClick,l=e.handleHeartClick;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),r=function(){o._element.remove(),o._element=null},(n="removeCard")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._name=i.name,this._link=i.link,this._ownerId=i.owner._id,this._likes=i.likes,this._cardId=i._id,this._userId=a,this.template=u,this.handleCardClick=s,this.handleTrashClick=c,this.handleHeartClick=l}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return this.template.querySelector(".element").cloneNode(!0)}},{key:"setLikes",value:function(e){this._likes=e,this._element.querySelector(".element__favorite-count").textContent=this._likes.length,this.isLiked()?this._element.querySelector(".element__favorite").classList.add("element__favorite_active"):this._element.querySelector(".element__favorite").classList.remove("element__favorite_active")}},{key:"isLiked",value:function(){var e=this;return this._likes.some((function(t){return t._id==e._userId}))}},{key:"_setEventListeners",value:function(){this._element.querySelector(".element__image").addEventListener("click",this.handleCardClick),this._element.querySelector(".element__trash").addEventListener("click",this.handleTrashClick),this._element.querySelector(".element__favorite").addEventListener("click",this.handleHeartClick)}},{key:"generateCard",value:function(){this._element=this._getTemplate(),this._setEventListeners();var e=this._element.querySelector(".element__image");return this._element.querySelector(".element__text").textContent=this._name,e.setAttribute("src",this._link),e.setAttribute("alt",this._name),this._ownerId===this._userId&&this._element.querySelector(".element__trash").classList.add("element__trash_visible"),this._element.querySelector(".element__favorite-count").textContent=this._likes.length,this.isLiked()&&this._element.querySelector(".element__favorite").classList.add("element__favorite_active"),this._element}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._settings=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._settings.inputSelector)),this._submitButton=this._form.querySelector(this._settings.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._submitButton.classList.add(this._settings.inactiveButtonClass):this._submitButton.classList.remove(this._settings.inactiveButtonClass)}},{key:"_showInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._settings.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._settings.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._settings.inputErrorClass),t.classList.remove(this._settings.errorClass),t.textContent=""}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)})),this._submitButton.classList.add(this._settings.inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&n(t.prototype,r),e}(),o={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},i=document.querySelector(".popup_type_edit"),a=document.querySelector(".popup_type_add"),u=document.querySelector(".popup_type_avatar"),s=document.querySelector(".profile__edit-button"),c=document.querySelector(".profile__pen"),l=document.querySelector(".profile__add-button"),f=u.querySelector(".popup__form"),p=i.querySelector(".popup__form"),h=a.querySelector(".popup__form"),d=document.querySelector("#element-template").content;function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var y=function(){function e(t){var n=t.renderer,r=t.containerSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(r)}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&_(t.prototype,n),e}();function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function m(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var b=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),m(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),m(this,"_handleOutsideClick",(function(e){e.target.classList.contains("popup_opened")&&n.close()})),m(this,"_handleCloseClick",(function(e){n.close()})),this._popup=document.querySelector(t),this._closeButton=this._popup.querySelector(".popup__close-icon")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),this.removeEventListeners()}},{key:"setEventListeners",value:function(){this._closeButton.addEventListener("click",this._handleCloseClick),this._popup.addEventListener("click",this._handleOutsideClick),document.addEventListener("keydown",this._handleEscClose)}},{key:"removeEventListeners",value:function(){this._closeButton.removeEventListener("click",this.close),this._popup.removeEventListener("click",this._handleOutsideClick),document.removeEventListener("keydown",this._handleEscClose)}}])&&v(t.prototype,n),e}();function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function S(e,t,n){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=E(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},S(e,t,n||e)}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function C(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=E(r);if(o){var n=E(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".popup__image"),t._description=t._popup.querySelector(".popup__description"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;S(E(a.prototype),"open",this).call(this),this._description.textContent=t,this._image.setAttribute("src",n),this._image.setAttribute("alt",t)}}])&&g(t.prototype,n),a}(b);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},I(e,t,n||e)}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function P(e,t){if(t&&("object"===O(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&q(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=R(r);if(o){var n=R(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return P(this,e)});function a(e){var t,n=e.popupSelector,r=e.submitHandler,o=e.resetHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._submitHandler=r,t._resetHandler=o,t._form=t._popup.querySelector(".popup__form"),t._submitButton=t._popup.querySelector(".popup__button"),t._inputList=Array.from(t._form.querySelectorAll(".popup__input")),t._buttonDefaultText=t._submitButton.textContent,t}return t=a,(n=[{key:"getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setInputValues",value:function(e){return this._inputList.forEach((function(t){t.value=e[t.name]})),e}},{key:"setEventListeners",value:function(){var e=this;I(R(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e.getInputValues())}),{once:!0})}},{key:"close",value:function(){this._submitButton.textContent=this._buttonDefaultText,this._resetHandler(),I(R(a.prototype),"close",this).call(this)}}])&&j(t.prototype,n),a}(b),x=function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=document.querySelector(".popup_opened .popup__button");t.textContent=e?"Loading...":"Loaded"};function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var B=function(){function e(t){var n=t.name,r=t.job,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._job=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,job:this._job.textContent,avatar:this._avatar.src}}},{key:"setUserInfo",value:function(e,t){this._name.textContent=e,this._job.textContent=t}},{key:"getUserAvatar",value:function(){return{link:this._avatar.src}}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&U(t.prototype,n),e}();function A(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var H=new function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),A(this,"_handleResponse",(function(e){return e.ok?e.json():Promise.reject("Error code: ".concat(e.status,",Error text: ").concat(e.statusText))})),A(this,"loadUserInfo",(function(){return fetch("".concat(n._baseUrl,"/users/me"),{headers:n._headers}).then(n._handleResponse)})),A(this,"setUserInfo",(function(e){return fetch("".concat(n._baseUrl,"/users/me"),{method:"PATCH",headers:n._headers,body:JSON.stringify({name:e.name,about:e.job})}).then(n._handleResponse)})),A(this,"setUserAvatar",(function(e){var t=e.link;return fetch("".concat(n._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:n._headers,body:JSON.stringify({avatar:t})}).then(n._handleResponse)})),A(this,"loadCards",(function(){return fetch("".concat(n._baseUrl,"/cards"),{headers:n._headers}).then(n._handleResponse)})),A(this,"addCard",(function(e){return fetch("".concat(n._baseUrl,"/cards"),{method:"POST",headers:n._headers,body:JSON.stringify({name:e.name,link:e.link})}).then(n._handleResponse)})),A(this,"deleteCard",(function(e){return fetch("".concat(n._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:n._headers}).then(n._handleResponse)})),A(this,"addLike",(function(e){return fetch("".concat(n._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:n._headers}).then(n._handleResponse)})),A(this,"removeLike",(function(e){return fetch("".concat(n._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:n._headers}).then(n._handleResponse)})),this._baseUrl=t.baseUrl,this._headers=t.headers}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f96b71f1-1b6f-4f5f-ab42-e21faff2d782","Content-Type":"application/json"}});function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function N(e,t,n){return N="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=z(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},N(e,t,n||e)}function J(e,t){return J=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},J(e,t)}function M(e,t){if(t&&("object"===D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function z(e){return z=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},z(e)}var $=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&J(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=z(r);if(o){var n=z(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return M(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._form=t._popup.querySelector(".popup__form"),t._submitButton=t._popup.querySelector(".popup__button"),t._buttonDefaultText=t._submitButton.textContent,t}return t=a,(n=[{key:"setSubmitHandler",value:function(e){this.handler=e,this._form.addEventListener("submit",this.handler)}},{key:"close",value:function(){this._submitButton.textContent=this._buttonDefaultText,this._form.removeEventListener("submit",this.handler),N(z(a.prototype),"close",this).call(this)}}])&&V(t.prototype,n),a}(b);function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var G,K=new r(o,f),Q=new r(o,p),W=new r(o,h);K.enableValidation(),Q.enableValidation(),W.enableValidation();var X=new B({name:".profile__name",job:".profile__job",avatar:".profile__image"}),Y=new L(".popup_type_show"),Z=new $(".popup_type_delete"),ee=function(e){var n=new t({cardData:e,userId:G,template:d,handleCardClick:function(){Y.open(e)},handleTrashClick:function(){Z.open(),Z.setSubmitHandler((function(e){e.preventDefault(),x(!0),H.deleteCard(n._cardId).then((function(e){e&&n.removeCard()})).finally((function(){x(),Z.close()}))}))},handleHeartClick:function(){n.isLiked()?H.removeLike(n._cardId).then((function(e){e&&n.setLikes(e.likes)})):H.addLike(n._cardId).then((function(e){e&&n.setLikes(e.likes)}))}});return n.generateCard()},te=new y({renderer:function(e){var t=ee(e);te.addItem(t)},containerSelector:".elements__list"});Promise.all([H.loadUserInfo(),H.loadCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];G=o._id,X.setUserInfo(o.name,o.about),X.setUserAvatar(o.avatar),te.renderer(i)})).catch((function(e){console.log(e)}));var ne=new T({popupSelector:".popup_type_add",submitHandler:function(e){x(!0),H.addCard(e).then((function(e){if(e){var t=ee(e);te.addItem(t)}})).finally((function(){x(),ne.close()}))},resetHandler:function(){h.reset(),W.resetValidation()}}),re=new T({popupSelector:".popup_type_avatar",submitHandler:function(e){x(!0),H.setUserAvatar(e).then((function(e){e&&X.setUserAvatar(e.avatar)})).finally((function(){x(),re.close()}))},resetHandler:function(){f.reset(),K.resetValidation()}}),oe=new T({popupSelector:".popup_type_edit",submitHandler:function(e){x(!0),H.setUserInfo(e).then((function(e){e&&X.setUserInfo(e.name,e.about)})).finally((function(){x(),oe.close()}))},resetHandler:function(){p.reset(),Q.resetValidation()}});l.addEventListener("click",(function(){return ne.open()})),c.addEventListener("click",(function(){re.setInputValues(X.getUserAvatar()),re.open()})),s.addEventListener("click",(function(){oe.setInputValues(X.getUserInfo()),oe.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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aUJBQ3hDSCxHQUFnQjVCLFVBR3BCekYsRUFBV3RDLGlCQUFpQixTQUFTLFdBQ2pDNEosR0FBaUJDLGVBQWVuQyxFQUFTcUMsZUFDekNILEdBQWlCN0IsVSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9DYXJkLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9BcGkuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwQ29uZmlybWF0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcblxyXG4gICAgY29uc3RydWN0b3Ioe2NhcmREYXRhLCB1c2VySWQsIHRlbXBsYXRlLCBoYW5kbGVDYXJkQ2xpY2ssIGhhbmRsZVRyYXNoQ2xpY2ssIGhhbmRsZUhlYXJ0Q2xpY2t9KSB7XHJcbiAgICAgICAgdGhpcy5fbmFtZSA9IGNhcmREYXRhLm5hbWU7XHJcbiAgICAgICAgdGhpcy5fbGluayA9IGNhcmREYXRhLmxpbms7XHJcbiAgICAgICAgdGhpcy5fb3duZXJJZCA9IGNhcmREYXRhLm93bmVyLl9pZDtcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGNhcmREYXRhLmxpa2VzO1xyXG4gICAgICAgIHRoaXMuX2NhcmRJZCA9IGNhcmREYXRhLl9pZDtcclxuICAgICAgICB0aGlzLl91c2VySWQgPSB1c2VySWQ7XHJcbiAgICAgICAgdGhpcy50ZW1wbGF0ZSA9IHRlbXBsYXRlO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlQ2FyZENsaWNrID0gaGFuZGxlQ2FyZENsaWNrO1xyXG4gICAgICAgIHRoaXMuaGFuZGxlVHJhc2hDbGljayA9IGhhbmRsZVRyYXNoQ2xpY2s7XHJcbiAgICAgICAgdGhpcy5oYW5kbGVIZWFydENsaWNrID0gaGFuZGxlSGVhcnRDbGljaztcclxuICAgIH1cclxuXHJcbiAgICBfZ2V0VGVtcGxhdGUoKSB7XHJcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSB0aGlzLnRlbXBsYXRlLnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50JykuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVDYXJkID0gKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucmVtb3ZlKCk7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0TGlrZXMobGlrZXMpIHtcclxuICAgICAgICB0aGlzLl9saWtlcyA9IGxpa2VzO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19mYXZvcml0ZS1jb3VudFwiKS50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VzLmxlbmd0aDtcclxuICAgICAgICBpZih0aGlzLmlzTGlrZWQoKSl7XHJcbiAgICAgICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19mYXZvcml0ZVwiKS5jbGFzc0xpc3QuYWRkKFwiZWxlbWVudF9fZmF2b3JpdGVfYWN0aXZlXCIpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fZmF2b3JpdGVcIikuY2xhc3NMaXN0LnJlbW92ZShcImVsZW1lbnRfX2Zhdm9yaXRlX2FjdGl2ZVwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaXNMaWtlZCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbGlrZXMuc29tZSgoZWxlbWVudCkgPT4gZWxlbWVudC5faWQgPT0gdGhpcy5fdXNlcklkKTtcclxuICAgIH1cclxuXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2ltYWdlXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZUNhcmRDbGljayk7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RyYXNoXCIpLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmhhbmRsZVRyYXNoQ2xpY2spO1xyXG4gICAgICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X19mYXZvcml0ZVwiKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5oYW5kbGVIZWFydENsaWNrKTtcclxuICAgIH1cclxuXHJcbiAgICBnZW5lcmF0ZUNhcmQoKSB7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2dldFRlbXBsYXRlKCk7XHJcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbiAgICAgICAgY29uc3QgaW1hZ2UgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9faW1hZ2VcIik7XHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX3RleHRcIikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xyXG5cclxuICAgICAgICBpbWFnZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgdGhpcy5fbGluayk7XHJcbiAgICAgICAgaW1hZ2Uuc2V0QXR0cmlidXRlKFwiYWx0XCIsIHRoaXMuX25hbWUpO1xyXG5cclxuICAgICAgICBpZih0aGlzLl9vd25lcklkID09PSB0aGlzLl91c2VySWQpIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50X190cmFzaFwiKS5jbGFzc0xpc3QuYWRkKFwiZWxlbWVudF9fdHJhc2hfdmlzaWJsZVwiKTtcclxuXHJcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRfX2Zhdm9yaXRlLWNvdW50XCIpLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xyXG4gICAgICAgIGlmKHRoaXMuaXNMaWtlZCgpKSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudF9fZmF2b3JpdGVcIikuY2xhc3NMaXN0LmFkZChcImVsZW1lbnRfX2Zhdm9yaXRlX2FjdGl2ZVwiKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihzZXR0aW5ncywgZm9ybSl7XHJcbiAgICAgICAgdGhpcy5fc2V0dGluZ3MgPSBzZXR0aW5ncztcclxuICAgICAgICB0aGlzLl9mb3JtID0gZm9ybTtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9zZXR0aW5ncy5pbnB1dFNlbGVjdG9yKSk7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX3NldHRpbmdzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcclxuICAgIH1cclxuXHJcbiAgICBfY2hlY2tJbnB1dFZhbGlkaXR5KGlucHV0RWxlbWVudCkge1xyXG4gICAgICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0RWxlbWVudCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICAgICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsZW1lbnQuaWR9LWVycm9yYCk7XHJcbiAgICAgICAgaW5wdXRFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5wdXRFcnJvckNsYXNzKTtcclxuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgICAgICAgZXJyb3JFbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuZXJyb3JDbGFzcyk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIF9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpIHtcclxuICAgICAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcclxuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX3NldHRpbmdzLmVycm9yQ2xhc3MpO1xyXG4gICAgICAgIGVycm9yRWxlbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHJlc2V0VmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dEVsZW1lbnQgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgXHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLmNsYXNzTGlzdC5hZGQodGhpcy5fc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcyk7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICByZXR1cm4gIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7ICAgIFxyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xyXG4gICAgICAgICAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgICAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNvbnN0IGluaXRpYWxDYXJkcyA9IFtcclxuICAgIHtcclxuICAgICAgICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogXCJMYWtlIExvdWlzZVwiLFxyXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvbGFrZS1sb3Vpc2UuanBnXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxyXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUvYmFsZC1tb3VudGFpbnMuanBnXCJcclxuICAgIH0sXHJcbiAgICB7XHJcbiAgICAgICAgbmFtZTogXCJMYXRlbWFyXCIsXHJcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYXRlbWFyLmpwZ1wiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6IFwiVmFub2lzZSBOYXRpb25hbCBQYXJrXCIsXHJcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS92YW5vaXNlLmpwZ1wiXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcclxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2xhZ28uanBnXCJcclxuICAgIH1cclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBzZXR0aW5nc09iamVjdCA9IHtcclxuICAgIGZvcm1TZWxlY3RvcjogXCIucG9wdXBfX2Zvcm1cIixcclxuICAgIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxyXG4gICAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLnBvcHVwX19idXR0b25cIixcclxuICAgIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX2J1dHRvbl9kaXNhYmxlZFwiLFxyXG4gICAgaW5wdXRFcnJvckNsYXNzOiBcInBvcHVwX19pbnB1dF90eXBlX2Vycm9yXCIsXHJcbiAgICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCJcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBwb3B1cEVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfZWRpdFwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2FkZFwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX2F2YXRhclwiKTtcclxuZXhwb3J0IGNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgZWRpdEF2YXRhckJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fcGVuXCIpO1xyXG5leHBvcnQgY29uc3QgYWRkQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hZGQtYnV0dG9uXCIpO1xyXG5leHBvcnQgY29uc3QgcG9wdXBGb3JtQXZhdGFyID0gcG9wdXBBdmF0YXIucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybUVkaXQgPSBwb3B1cEVkaXQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwRm9ybUFkZCA9IHBvcHVwQWRkLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XHJcbmV4cG9ydCBjb25zdCBlbGVtZW50VGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VsZW1lbnQtdGVtcGxhdGVcIikuY29udGVudDsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcih7IHJlbmRlcmVyICwgY29udGFpbmVyU2VsZWN0b3J9KSB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyID0gcmVuZGVyZXI7XHJcbiAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoY29udGFpbmVyU2VsZWN0b3IpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcmVyKGl0ZW1zKXtcclxuICAgICAgaXRlbXMuZm9yRWFjaChpdGVtID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XHJcbiAgICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRJdGVtKGl0ZW0pe1xyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lci5wcmVwZW5kKGl0ZW0pO1xyXG4gICAgfVxyXG5cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgdGhpcy5fY2xvc2VCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19jbG9zZS1pY29uXCIpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgb3BlbigpIHtcclxuICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcInBvcHVwX29wZW5lZFwiKTtcclxuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIH1cclxuICBcclxuICAgIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgXHJcbiAgICBfaGFuZGxlT3V0c2lkZUNsaWNrID0gKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoXCJwb3B1cF9vcGVuZWRcIikpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIF9oYW5kbGVDbG9zZUNsaWNrID0gKGV2dCkgPT4ge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuX2hhbmRsZUNsb3NlQ2xpY2spO1xyXG4gICAgICB0aGlzLl9wb3B1cC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlT3V0c2lkZUNsaWNrKTtcclxuICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfVxyXG4gIFxyXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKSB7ICBcclxuICAgICAgdGhpcy5fY2xvc2VCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuY2xvc2UpO1xyXG4gICAgICB0aGlzLl9wb3B1cC5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlT3V0c2lkZUNsaWNrKTtcclxuICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgfSAgXHJcbiAgfVxyXG4gICIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcblxyXG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgICAgIHN1cGVyKHBvcHVwU2VsZWN0b3IpO1xyXG4gICAgICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW1hZ2VcIik7XHJcbiAgICAgICAgdGhpcy5fZGVzY3JpcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19kZXNjcmlwdGlvblwiKTtcclxuICAgIH1cclxuXHJcbiAgICBvcGVuKHsgbmFtZSwgbGluayB9KSB7XHJcbiAgICAgICAgc3VwZXIub3BlbigpO1xyXG4gICAgICAgIHRoaXMuX2Rlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gbmFtZTtcclxuICAgICAgICB0aGlzLl9pbWFnZS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgbGluayk7XHJcbiAgICAgICAgdGhpcy5faW1hZ2Uuc2V0QXR0cmlidXRlKFwiYWx0XCIsIG5hbWUpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHsgcG9wdXBTZWxlY3Rvciwgc3VibWl0SGFuZGxlciwgcmVzZXRIYW5kbGVyIH0pIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRIYW5kbGVyID0gc3VibWl0SGFuZGxlcjtcclxuICAgICAgICB0aGlzLl9yZXNldEhhbmRsZXIgPSByZXNldEhhbmRsZXI7XHJcbiAgICAgICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fYnV0dG9uXCIpO1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKSk7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRGVmYXVsdFRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICAgICAgbGV0IHZhbHVlcyA9IHt9O1xyXG4gICAgICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0ID0+IHtcclxuICAgICAgICAgICAgdmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWU7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlcztcclxuICAgIH1cclxuXHJcbiAgICBzZXRJbnB1dFZhbHVlcyh2YWx1ZXMpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgICAgICAgIGlucHV0LnZhbHVlID0gdmFsdWVzW2lucHV0Lm5hbWVdO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiB2YWx1ZXM7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgICAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1Ym1pdEhhbmRsZXIodGhpcy5nZXRJbnB1dFZhbHVlcygpKTtcclxuICAgICAgICB9LCB7IG9uY2U6IHRydWUgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2xvc2UoKSB7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fYnV0dG9uRGVmYXVsdFRleHQ7XHJcbiAgICAgICAgdGhpcy5fcmVzZXRIYW5kbGVyKCk7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IHJlbmRlckxvYWRpbmcgPSAoaXNMb2FkaW5nID0gZmFsc2UpID0+IHtcclxuICAgIGNvbnN0IGN1cnJlbnRBY3RpdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfb3BlbmVkIC5wb3B1cF9fYnV0dG9uJyk7XHJcbiAgICBjdXJyZW50QWN0aXZlQnV0dG9uLnRleHRDb250ZW50ID0gaXNMb2FkaW5nID8gJ0xvYWRpbmcuLi4nIDogJ0xvYWRlZCc7XHJcbn07IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHsgbmFtZSwgam9iLCBhdmF0YXIgfSkge1xyXG4gICAgICAgIHRoaXMuX25hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKG5hbWUpO1xyXG4gICAgICAgIHRoaXMuX2pvYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioam9iKTtcclxuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGF2YXRhcik7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0VXNlckluZm8oKXtcclxuICAgICAgICBjb25zdCBuYW1lID0gdGhpcy5fbmFtZS50ZXh0Q29udGVudDtcclxuICAgICAgICBjb25zdCBqb2IgPSB0aGlzLl9qb2IudGV4dENvbnRlbnQ7XHJcbiAgICAgICAgY29uc3QgYXZhdGFyID0gdGhpcy5fYXZhdGFyLnNyYztcclxuICAgICAgICByZXR1cm4geyBuYW1lOiBuYW1lLCBqb2I6IGpvYiwgYXZhdGFyOiBhdmF0YXJ9O1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvKG5hbWUsIGpvYil7XHJcbiAgICAgICAgdGhpcy5fbmFtZS50ZXh0Q29udGVudCA9IG5hbWU7XHJcbiAgICAgICAgdGhpcy5fam9iLnRleHRDb250ZW50ID0gam9iO1xyXG4gICAgfVxyXG5cclxuICAgIGdldFVzZXJBdmF0YXIoKXtcclxuICAgICAgICByZXR1cm4ge2xpbms6IHRoaXMuX2F2YXRhci5zcmN9O1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJBdmF0YXIobGluayl7XHJcbiAgICAgICAgdGhpcy5fYXZhdGFyLnNyYyA9IGxpbms7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgICAgICB0aGlzLl9iYXNlVXJsID0gb3B0aW9ucy5iYXNlVXJsO1xyXG4gICAgICAgIHRoaXMuX2hlYWRlcnMgPSBvcHRpb25zLmhlYWRlcnM7XHJcbiAgICB9XHJcblxyXG4gICAgX2hhbmRsZVJlc3BvbnNlID0gcmVzID0+IHtcclxuICAgICAgICByZXR1cm4gKHJlcy5vaykgPyByZXMuanNvbigpIDogUHJvbWlzZS5yZWplY3QoYEVycm9yIGNvZGU6ICR7cmVzLnN0YXR1c30sRXJyb3IgdGV4dDogJHtyZXMuc3RhdHVzVGV4dH1gKTtcclxuICAgIH1cclxuXHJcbiAgICBsb2FkVXNlckluZm8gPSAoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbmZvID0gKHZhbHVlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXHJcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IHZhbHVlcy5uYW1lLFxyXG4gICAgICAgICAgICAgICAgYWJvdXQ6IHZhbHVlcy5qb2JcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBzZXRVc2VyQXZhdGFyID0gKHtsaW5rfSkgPT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJQQVRDSFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxyXG4gICAgICAgICAgICBib2R5OiAgSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgYXZhdGFyOiBsaW5rXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgbG9hZENhcmRzID0gKCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRDYXJkID0gKHZhbHVlcykgPT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcclxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgICAgICAgICAgbmFtZTogdmFsdWVzLm5hbWUsXHJcbiAgICAgICAgICAgICAgICBsaW5rOiB2YWx1ZXMubGlua1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xyXG4gICAgfSBcclxuXHJcbiAgICBkZWxldGVDYXJkID0gKGNhcmRJZCkgPT4ge1xyXG4gICAgICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2NhcmRJZH1gLCB7XHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVyc1xyXG4gICAgICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZExpa2UgPSAoY2FyZElkKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzL2xpa2VzLyR7Y2FyZElkfWAsIHtcclxuICAgICAgICAgICAgbWV0aG9kOiBcIlBVVFwiLFxyXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzXHJcbiAgICAgICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlTGlrZSA9IChjYXJkSWQpID0+IHtcclxuICAgICAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvbGlrZXMvJHtjYXJkSWR9YCwge1xyXG4gICAgICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnNcclxuICAgICAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gICAgYmFzZVVybDogXCJodHRwczovL2Fyb3VuZC5ub21vcmVwYXJ0aWVzLmNvL3YxL2dyb3VwLTEyXCIsXHJcbiAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJmOTZiNzFmMS0xYjZmLTRmNWYtYWI0Mi1lMjFmYWZmMmQ3ODJcIixcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIlxyXG4gICAgfVxyXG59KTsiLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwQ29uZmlybWF0aW9uIGV4dGVuZHMgUG9wdXAge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgICAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcclxuICAgICAgICB0aGlzLl9zdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19idXR0b25cIik7XHJcbiAgICAgICAgdGhpcy5fYnV0dG9uRGVmYXVsdFRleHQgPSB0aGlzLl9zdWJtaXRCdXR0b24udGV4dENvbnRlbnQ7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0U3VibWl0SGFuZGxlcihoYW5kbGVyKXtcclxuICAgICAgICB0aGlzLmhhbmRsZXIgPSBoYW5kbGVyO1xyXG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCB0aGlzLmhhbmRsZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCl7XHJcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fYnV0dG9uRGVmYXVsdFRleHQ7XHJcbiAgICAgICAgdGhpcy5fZm9ybS5yZW1vdmVFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIHRoaXMuaGFuZGxlcik7XHJcbiAgICAgICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCByZW5kZXJMb2FkaW5nID0gKGlzTG9hZGluZyA9IGZhbHNlKSA9PiB7XHJcbiAgICBjb25zdCBjdXJyZW50QWN0aXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX29wZW5lZCAucG9wdXBfX2J1dHRvbicpO1xyXG4gICAgY3VycmVudEFjdGl2ZUJ1dHRvbi50ZXh0Q29udGVudCA9IGlzTG9hZGluZyA/ICdMb2FkaW5nLi4uJyA6ICdMb2FkZWQnO1xyXG59OyIsImltcG9ydCBcIi4vaW5kZXguY3NzXCJcclxuXHJcbmltcG9ydCBDYXJkIGZyb20gXCIuLi9jb21wb25lbnRzL0NhcmQuanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcclxuaW1wb3J0IHsgc2V0dGluZ3NPYmplY3QgfSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhJbWFnZSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCB7IHJlbmRlckxvYWRpbmcgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtLmpzXCI7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tIFwiLi4vY29tcG9uZW50cy9Vc2VySW5mby5qc1wiO1xyXG5pbXBvcnQgeyBhcGkgfSBmcm9tIFwiLi4vY29tcG9uZW50cy9BcGkuanNcIjtcclxuaW1wb3J0IFBvcHVwQ29uZmlybWF0aW9uIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwQ29uZmlybWF0aW9uLmpzXCI7XHJcbmltcG9ydCB7XHJcbiAgICBwb3B1cEVkaXQsXHJcbiAgICBwb3B1cEFkZCxcclxuICAgIHBvcHVwQXZhdGFyLFxyXG4gICAgZWRpdEJ1dHRvbixcclxuICAgIGVkaXRBdmF0YXJCdXR0b24sXHJcbiAgICBhZGRCdXR0b24sXHJcbiAgICBwb3B1cEZvcm1BdmF0YXIsXHJcbiAgICBwb3B1cEZvcm1FZGl0LFxyXG4gICAgcG9wdXBGb3JtQWRkLFxyXG4gICAgZWxlbWVudFRlbXBsYXRlXHJcbn0gZnJvbSBcIi4uL3V0aWxzL2NvbnN0YW50cy5qc1wiO1xyXG5cclxuY29uc3QgZm9ybVZhbGlkYXRvckF2YXRhciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzT2JqZWN0LCBwb3B1cEZvcm1BdmF0YXIpO1xyXG5jb25zdCBmb3JtVmFsaWRhdG9yRWRpdCA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzT2JqZWN0LCBwb3B1cEZvcm1FZGl0KTtcclxuY29uc3QgZm9ybVZhbGlkYXRvckFkZCA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzT2JqZWN0LCBwb3B1cEZvcm1BZGQpO1xyXG5cclxubGV0IHVzZXJJZDtcclxuXHJcbmZvcm1WYWxpZGF0b3JBdmF0YXIuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5mb3JtVmFsaWRhdG9yRWRpdC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcbmZvcm1WYWxpZGF0b3JBZGQuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oeyBuYW1lOiBcIi5wcm9maWxlX19uYW1lXCIsIGpvYjogXCIucHJvZmlsZV9fam9iXCIsIGF2YXRhcjogXCIucHJvZmlsZV9faW1hZ2VcIiB9KTtcclxuY29uc3Qgc2hvd0ltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIucG9wdXBfdHlwZV9zaG93XCIpO1xyXG5jb25zdCBkZWxldGVDYXJkUG9wdXAgPSBuZXcgUG9wdXBDb25maXJtYXRpb24oXCIucG9wdXBfdHlwZV9kZWxldGVcIik7XHJcblxyXG5jb25zdCByZW5kZXJDYXJkID0gKGl0ZW0pID0+IHtcclxuICAgIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZCh7XHJcbiAgICAgICAgY2FyZERhdGE6IGl0ZW0sXHJcbiAgICAgICAgdXNlcklkOiB1c2VySWQsXHJcbiAgICAgICAgdGVtcGxhdGU6IGVsZW1lbnRUZW1wbGF0ZSxcclxuICAgICAgICBoYW5kbGVDYXJkQ2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgICAgc2hvd0ltYWdlUG9wdXAub3BlbihpdGVtKTtcclxuICAgICAgICB9LFxyXG4gICAgICAgIGhhbmRsZVRyYXNoQ2xpY2s6ICgpID0+IHtcclxuICAgICAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLm9wZW4oKTtcclxuICAgICAgICAgICAgZGVsZXRlQ2FyZFBvcHVwLnNldFN1Ym1pdEhhbmRsZXIoKGV2dCk9PntcclxuICAgICAgICAgICAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICAgICAgcmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICAgICAgICAgIGFwaS5kZWxldGVDYXJkKGNhcmQuX2NhcmRJZCkudGhlbigocmVzKT0+e1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2FyZC5yZW1vdmVDYXJkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyTG9hZGluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZUNhcmRQb3B1cC5jbG9zZSgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBoYW5kbGVIZWFydENsaWNrOiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmKGNhcmQuaXNMaWtlZCgpKXtcclxuICAgICAgICAgICAgICAgIGFwaS5yZW1vdmVMaWtlKGNhcmQuX2NhcmRJZCkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcmQuc2V0TGlrZXMocmVzLmxpa2VzKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICBhcGkuYWRkTGlrZShjYXJkLl9jYXJkSWQpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjYXJkLnNldExpa2VzKHJlcy5saWtlcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuICAgIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZW5lcmF0ZUNhcmQoKTtcclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxufVxyXG5cclxuY29uc3QgY2FyZExpc3QgPSBuZXcgU2VjdGlvbih7XHJcbiAgICByZW5kZXJlcjogKGNhcmREYXRhKSA9PiB7XHJcbiAgICAgICAgY29uc3QgY2FyZCA9IHJlbmRlckNhcmQoY2FyZERhdGEpO1xyXG4gICAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZCk7XHJcbiAgICB9LFxyXG4gICAgY29udGFpbmVyU2VsZWN0b3I6IFwiLmVsZW1lbnRzX19saXN0XCJcclxufSk7XHJcblxyXG5Qcm9taXNlLmFsbChbYXBpLmxvYWRVc2VySW5mbygpLCBhcGkubG9hZENhcmRzKCldKVxyXG4gICAgLnRoZW4oKFt1c2VyRGF0YSwgY2FyZHNEYXRhXSkgPT4ge1xyXG4gICAgICAgIHVzZXJJZCA9IHVzZXJEYXRhLl9pZDtcclxuICAgICAgICB1c2VySW5mby5zZXRVc2VySW5mbyh1c2VyRGF0YS5uYW1lLCB1c2VyRGF0YS5hYm91dCk7XHJcbiAgICAgICAgdXNlckluZm8uc2V0VXNlckF2YXRhcih1c2VyRGF0YS5hdmF0YXIpO1xyXG4gICAgICAgIGNhcmRMaXN0LnJlbmRlcmVyKGNhcmRzRGF0YSk7XHJcbiAgICB9KS5jYXRjaCgoZXJyb3IpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7XHJcbiAgICB9KTtcclxuXHJcbmNvbnN0IGFkZFBsYWNlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybSh7XHJcbiAgICBwb3B1cFNlbGVjdG9yOiBcIi5wb3B1cF90eXBlX2FkZFwiLFxyXG4gICAgc3VibWl0SGFuZGxlcjogKGlucHV0VmFsdWVzKSA9PiB7XHJcbiAgICAgICAgcmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICBhcGkuYWRkQ2FyZChpbnB1dFZhbHVlcykudGhlbihyZXMgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjYXJkRWxlbWVudCA9IHJlbmRlckNhcmQocmVzKTtcclxuICAgICAgICAgICAgICAgIGNhcmRMaXN0LmFkZEl0ZW0oY2FyZEVsZW1lbnQpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgcmVuZGVyTG9hZGluZygpO1xyXG4gICAgICAgICAgICBhZGRQbGFjZVBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICByZXNldEhhbmRsZXI6ICgpID0+IHtcclxuICAgICAgICBwb3B1cEZvcm1BZGQucmVzZXQoKTtcclxuICAgICAgICBmb3JtVmFsaWRhdG9yQWRkLnJlc2V0VmFsaWRhdGlvbigpO1xyXG4gICAgfVxyXG59KTtcclxuXHJcbmNvbnN0IGVkaXRBdmF0YXJQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICAgIHBvcHVwU2VsZWN0b3I6IFwiLnBvcHVwX3R5cGVfYXZhdGFyXCIsXHJcbiAgICBzdWJtaXRIYW5kbGVyOiAoaW5wdXRWYWx1ZXMpID0+IHtcclxuICAgICAgICByZW5kZXJMb2FkaW5nKHRydWUpO1xyXG4gICAgICAgIGFwaS5zZXRVc2VyQXZhdGFyKGlucHV0VmFsdWVzKS50aGVuKHJlcyA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXMpIHtcclxuICAgICAgICAgICAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIocmVzLmF2YXRhcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgcmVuZGVyTG9hZGluZygpO1xyXG4gICAgICAgICAgICBlZGl0QXZhdGFyUG9wdXAuY2xvc2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIHJlc2V0SGFuZGxlcjogKCkgPT4ge1xyXG4gICAgICAgIHBvcHVwRm9ybUF2YXRhci5yZXNldCgpO1xyXG4gICAgICAgIGZvcm1WYWxpZGF0b3JBdmF0YXIucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuY29uc3QgZWRpdFByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKHtcclxuICAgIHBvcHVwU2VsZWN0b3I6IFwiLnBvcHVwX3R5cGVfZWRpdFwiLFxyXG4gICAgc3VibWl0SGFuZGxlcjogKGlucHV0VmFsdWVzKSA9PiB7XHJcbiAgICAgICAgcmVuZGVyTG9hZGluZyh0cnVlKTtcclxuICAgICAgICBhcGkuc2V0VXNlckluZm8oaW5wdXRWYWx1ZXMpLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgaWYgKHJlcykge1xyXG4gICAgICAgICAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8ocmVzLm5hbWUsIHJlcy5hYm91dCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KS5maW5hbGx5KCgpID0+IHtcclxuICAgICAgICAgICAgcmVuZGVyTG9hZGluZygpO1xyXG4gICAgICAgICAgICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XHJcbiAgICAgICAgfSlcclxuICAgIH0sXHJcbiAgICByZXNldEhhbmRsZXI6ICgpID0+IHtcclxuICAgICAgICBwb3B1cEZvcm1FZGl0LnJlc2V0KCk7XHJcbiAgICAgICAgZm9ybVZhbGlkYXRvckVkaXQucmVzZXRWYWxpZGF0aW9uKCk7XHJcbiAgICB9XHJcbn0pO1xyXG5cclxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBhZGRQbGFjZVBvcHVwLm9wZW4oKSk7XHJcblxyXG5lZGl0QXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICBlZGl0QXZhdGFyUG9wdXAuc2V0SW5wdXRWYWx1ZXModXNlckluZm8uZ2V0VXNlckF2YXRhcigpKTtcclxuICAgIGVkaXRBdmF0YXJQb3B1cC5vcGVuKCk7XHJcbn0pO1xyXG5cclxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG4gICAgZWRpdFByb2ZpbGVQb3B1cC5zZXRJbnB1dFZhbHVlcyh1c2VySW5mby5nZXRVc2VySW5mbygpKTtcclxuICAgIGVkaXRQcm9maWxlUG9wdXAub3BlbigpO1xyXG59KTsiXSwibmFtZXMiOlsiQ2FyZCIsImNhcmREYXRhIiwidXNlcklkIiwidGVtcGxhdGUiLCJoYW5kbGVDYXJkQ2xpY2siLCJoYW5kbGVUcmFzaENsaWNrIiwiaGFuZGxlSGVhcnRDbGljayIsIl9lbGVtZW50IiwicmVtb3ZlIiwidGhpcyIsIl9uYW1lIiwibmFtZSIsIl9saW5rIiwibGluayIsIl9vd25lcklkIiwib3duZXIiLCJfaWQiLCJfbGlrZXMiLCJsaWtlcyIsIl9jYXJkSWQiLCJfdXNlcklkIiwicXVlcnlTZWxlY3RvciIsImNsb25lTm9kZSIsInRleHRDb250ZW50IiwibGVuZ3RoIiwiaXNMaWtlZCIsImNsYXNzTGlzdCIsImFkZCIsInNvbWUiLCJlbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9nZXRUZW1wbGF0ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImltYWdlIiwic2V0QXR0cmlidXRlIiwiRm9ybVZhbGlkYXRvciIsInNldHRpbmdzIiwiZm9ybSIsIl9zZXR0aW5ncyIsIl9mb3JtIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbnB1dFNlbGVjdG9yIiwiX3N1Ym1pdEJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiaW5wdXRFbGVtZW50IiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsIl9oYXNJbnZhbGlkSW5wdXQiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiZXJyb3JFbGVtZW50IiwiaWQiLCJpbnB1dEVycm9yQ2xhc3MiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsImVycm9yQ2xhc3MiLCJmb3JFYWNoIiwiX3RvZ2dsZUJ1dHRvblN0YXRlIiwiX2NoZWNrSW5wdXRWYWxpZGl0eSIsInNldHRpbmdzT2JqZWN0IiwiZm9ybVNlbGVjdG9yIiwicG9wdXBFZGl0IiwiZG9jdW1lbnQiLCJwb3B1cEFkZCIsInBvcHVwQXZhdGFyIiwiZWRpdEJ1dHRvbiIsImVkaXRBdmF0YXJCdXR0b24iLCJhZGRCdXR0b24iLCJwb3B1cEZvcm1BdmF0YXIiLCJwb3B1cEZvcm1FZGl0IiwicG9wdXBGb3JtQWRkIiwiZWxlbWVudFRlbXBsYXRlIiwiY29udGVudCIsIlNlY3Rpb24iLCJyZW5kZXJlciIsImNvbnRhaW5lclNlbGVjdG9yIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW1zIiwiaXRlbSIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJldnQiLCJrZXkiLCJjbG9zZSIsInRhcmdldCIsImNvbnRhaW5zIiwiX3BvcHVwIiwiX2Nsb3NlQnV0dG9uIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmVFdmVudExpc3RlbmVycyIsIl9oYW5kbGVDbG9zZUNsaWNrIiwiX2hhbmRsZU91dHNpZGVDbGljayIsIl9oYW5kbGVFc2NDbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJQb3B1cFdpdGhJbWFnZSIsIl9pbWFnZSIsIl9kZXNjcmlwdGlvbiIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRIYW5kbGVyIiwicmVzZXRIYW5kbGVyIiwiX3N1Ym1pdEhhbmRsZXIiLCJfcmVzZXRIYW5kbGVyIiwiX2J1dHRvbkRlZmF1bHRUZXh0IiwidmFsdWVzIiwiaW5wdXQiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiZ2V0SW5wdXRWYWx1ZXMiLCJvbmNlIiwicmVuZGVyTG9hZGluZyIsImlzTG9hZGluZyIsImN1cnJlbnRBY3RpdmVCdXR0b24iLCJVc2VySW5mbyIsImpvYiIsImF2YXRhciIsIl9qb2IiLCJfYXZhdGFyIiwic3JjIiwiYXBpIiwib3B0aW9ucyIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiZmV0Y2giLCJfYmFzZVVybCIsImhlYWRlcnMiLCJfaGVhZGVycyIsInRoZW4iLCJfaGFuZGxlUmVzcG9uc2UiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFib3V0IiwiY2FyZElkIiwiYmFzZVVybCIsImF1dGhvcml6YXRpb24iLCJQb3B1cENvbmZpcm1hdGlvbiIsImhhbmRsZXIiLCJmb3JtVmFsaWRhdG9yQXZhdGFyIiwiZm9ybVZhbGlkYXRvckVkaXQiLCJmb3JtVmFsaWRhdG9yQWRkIiwiZW5hYmxlVmFsaWRhdGlvbiIsInVzZXJJbmZvIiwic2hvd0ltYWdlUG9wdXAiLCJkZWxldGVDYXJkUG9wdXAiLCJyZW5kZXJDYXJkIiwiY2FyZCIsIm9wZW4iLCJzZXRTdWJtaXRIYW5kbGVyIiwiZGVsZXRlQ2FyZCIsInJlbW92ZUNhcmQiLCJmaW5hbGx5IiwicmVtb3ZlTGlrZSIsInNldExpa2VzIiwiYWRkTGlrZSIsImdlbmVyYXRlQ2FyZCIsImNhcmRMaXN0IiwiYWRkSXRlbSIsImFsbCIsImxvYWRVc2VySW5mbyIsImxvYWRDYXJkcyIsInVzZXJEYXRhIiwiY2FyZHNEYXRhIiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJsb2ciLCJhZGRQbGFjZVBvcHVwIiwiaW5wdXRWYWx1ZXMiLCJhZGRDYXJkIiwiY2FyZEVsZW1lbnQiLCJyZXNldCIsInJlc2V0VmFsaWRhdGlvbiIsImVkaXRBdmF0YXJQb3B1cCIsImVkaXRQcm9maWxlUG9wdXAiLCJzZXRJbnB1dFZhbHVlcyIsImdldFVzZXJBdmF0YXIiLCJnZXRVc2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=